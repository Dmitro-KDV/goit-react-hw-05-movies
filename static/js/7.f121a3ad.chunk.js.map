{"version":3,"file":"static/js/7.f121a3ad.chunk.js","mappings":"oNAoEA,UA/De,WAAO,IAADA,EACnBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAwCT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAb,EAAAA,EAAAA,GAAAW,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MACXC,EAAmC,QAA5BtB,EAAGkB,EAAaK,IAAI,gBAAQ,IAAAvB,EAAAA,EAAI,GAiC7C,OArBGS,GAAca,IACjBZ,EAAcY,GACdhB,EAASgB,KAGXE,EAAAA,EAAAA,YAAU,YACJC,EAAAA,EAAAA,IAAgBhB,GACfiB,MAAK,SAAAC,GACkB,IAAlBA,EAASC,KAIbd,EAAgBa,EAASC,KAAKC,SAH1BC,IAAAA,OAAAA,QAAwB,2EAI9B,IACCC,OAAM,SAAUC,GACfF,IAAAA,OAAAA,QACE,sDAEJ,GACN,GAAG,CAACrB,KAGAwB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,UAAU,aAAaC,SA7BZ,SAACC,GACpBA,EAAEC,iBACF5B,EAAcL,EAAMkC,QACpBpB,EAAgB,CAACqB,MAAOnC,EAAMkC,QAClC,EAyB0DL,SAAA,EAClDO,EAAAA,EAAAA,KAAA,SACEN,UAAU,mBACVO,KAAK,OACLC,YAAY,GACZC,SAtCa,SAAHC,GAA+B,IAAfxC,EAAKwC,EAAfC,OAAUzC,MAChCC,EAASD,EAAMkC,OACjB,EAqCQlC,MAAOA,KAEToC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASP,UAAU,oBAAmBD,UACjDO,EAAAA,EAAAA,KAAA,QAAMN,UAAU,0BAAyBD,SAAC,gBAG7CrB,GAAgBA,EAAakC,KAAI,SAACC,GAC/B,OACAP,EAAAA,EAAAA,KAAA,MAAAP,UACEO,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKH,EAAGI,IAAMC,MAAOjC,EAASc,SAAEc,EAAGM,SADpCN,EAAGI,GAGb,MAGT,C","sources":["components/pages/Movies.jsx"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport {getMoviesSearch} from '../services';\n\nconst Movies = () => {\n  const [value, setValue] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [moviesSearch, setMoviesSearch] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation()\n  const searchT = searchParams.get('query') ?? ''\n  \n  const handleChange = ({ target: { value } }) => {\n    setValue(value.trim());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setSearchText(value.trim())\n    setSearchParams({query: value.trim()});\n}\n\nif (!searchText && searchT) {\n  setSearchText(searchT)\n  setValue(searchT);\n}\n\nuseEffect(() => {\n      getMoviesSearch(searchText)\n      .then(response => {\n        if (response.data === 0) {\n            Notiflix.Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n            return;\n        }\n        setMoviesSearch(response.data.results);\n      })\n      .catch(function (error) {\n        Notiflix.Notify.failure(\n          'Oops! Something went wrong! Try reloading the page!'\n        );\n      })\n}, [searchText]);\n\n  return (\n    <div>\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          placeholder=\"\"\n          onChange={handleChange}\n          value={value}\n        />\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n      </form>\n      {moviesSearch && moviesSearch.map((el) => {\n          return (\n          <li key={el.id}>\n            <Link to={`${el.id}`} state={location}>{el.title}</Link>\n          </li>\n        )})}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_searchParams$get","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","searchText","setSearchText","_useState5","_useState6","moviesSearch","setMoviesSearch","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","searchT","get","useEffect","getMoviesSearch","then","response","data","results","Notiflix","catch","error","_jsxs","children","className","onSubmit","e","preventDefault","trim","query","_jsx","type","placeholder","onChange","_ref","target","map","el","Link","to","concat","id","state","title"],"sourceRoot":""}